---
version: '3.7'

services:
  zookeeper1:
    image: martincallesen/zookeeper
    hostname: zookeeper1
    container_name: zookeeper1
    ports:
      - "2181:2181"
      - "8778:8778"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      KAFKA_OPTS: -javaagent:/opt/jolokia/jolokia-jvm-1.6.2-agent.jar=host=*
    networks:
      - development-net
    healthcheck:
      test: ["CMD", "bash", "-c", "echo ruok | nc localhost 2181 | grep imok"]
      start_period: 30s
    volumes:
      - log4j-dir-zookeeper1:/var/log/kafka
      - ./config/log4j/log4j.properties.template:/etc/confluent/docker/log4j.properties.template

  zookeeper1-metricbeat:
    image: docker.elastic.co/beats/metricbeat:7.6.1
    command: metricbeat -e -strict.perms=false
    hostname: zookeeper1-metricbeat
    container_name: zookeeper1-metricbeat
    depends_on:
      - zookeeper1
      - kibana
    environment:
      - KIBANA_HOST=kibana:5601
      - ELASTICSEARCH_HOST=http://elasticsearch:9200
      - data.jolokia.url= http://zookeeper1:8778/jolokia
    networks:
      - development-net
    volumes:
      - ./config/metricbeat/metricbeat.yml:/usr/share/metricbeat/metricbeat.yml

  zookeeper1-filebeat:
    image: docker.elastic.co/beats/filebeat:7.4.1
    command: filebeat -e -strict.perms=false
    hostname: zookeeper1-filebeat
    container_name: zookeeper1-filebeat
    depends_on:
      - zookeeper1
      - kibana
    environment:
      - KIBANA_HOST=kibana:5601
      - ELASTICSEARCH_HOST=elasticsearch:9200
    networks:
      - development-net
    volumes:
      - log4j-dir-zookeeper1:/var/log/kafka
      - ./config/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml

  broker1:
    image: martincallesen/kafka
    hostname: broker1
    container_name: broker1
    depends_on:
      - zookeeper1
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper1:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker1:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker1:9092
      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper1:2181
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'false'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
      KAFKA_OPTS: -javaagent:/opt/jolokia/jolokia-jvm-1.6.2-agent.jar=host=*
    networks:
      - development-net
    healthcheck:
      test: ["CMD", "nc", "127.0.0.1", "9092"]
      start_period: 30s
    volumes:
      - log4j-dir-broker1:/var/log/kafka
      - ./config/log4j/log4j.properties.template:/etc/confluent/docker/log4j.properties.template
      - ./config/kafka/server.properties:/etc/kafka/server.properties

  broker1-metricbeat:
    image: docker.elastic.co/beats/metricbeat:7.6.1
    command: metricbeat -e -strict.perms=false
    hostname: broker1-metricbeat
    container_name: broker1-metricbeat
    depends_on:
      - broker1
      - kibana
    environment:
      - KIBANA_HOST=kibana:5601
      - ELASTICSEARCH_HOST=http://elasticsearch:9200
      - data.jolokia.url= http://broker1:8778/jolokia
    networks:
      - development-net
    volumes:
      - ./config/metricbeat/metricbeat.yml:/usr/share/metricbeat/metricbeat.yml

  broker1-filebeat:
    image: docker.elastic.co/beats/filebeat:7.4.1
    command: filebeat -e -strict.perms=false
    hostname: broker1-filebeat
    container_name: broker1-filebeat
    depends_on:
      - broker1
      - kibana
    environment:
      - KIBANA_HOST=kibana:5601
      - ELASTICSEARCH_HOST=elasticsearch:9200
    networks:
      - development-net
    volumes:
      - log4j-dir-broker1:/var/log/kafka
      - ./config/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml

  control-center:
    image: confluentinc/cp-enterprise-control-center:5.5.1
    hostname: control-center
    container_name: control-center
    depends_on:
      - zookeeper1
      - broker1
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'broker1:9092'
      CONTROL_CENTER_ZOOKEEPER_CONNECT: 'zookeeper1:2181'
      CONTROL_CENTER_CONNECT_CLUSTER: 'connect:8083'
      CONTROL_CENTER_KSQL_KSQLDB1_URL: "http://ksqldb-server:8088"
      CONTROL_CENTER_CONFLUENT_CONTROLCENTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      CONFLUENT_METRICS_ENABLE: 'false'
      PORT: 9021
    networks:
      - development-net

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.1
    hostname: elasticsearch
    container_name: elasticsearch
    healthcheck:
      test: [ "CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1" ]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: on-failure
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - node.name=elasticsearch
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    networks:
      - development-net

  kibana:
    image: docker.elastic.co/kibana/kibana:7.6.1
    hostname: kibana
    container_name: kibana
    restart: on-failure
    ports:
      - "5601:5601"
    environment:
      xpack.security.enabled: "false"
    depends_on:
      - elasticsearch
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5601"]
      start_period: 30s
    networks:
      - development-net

networks:
  development-net:
    driver: bridge

volumes:
  log4j-dir-broker1:
  log4j-dir-zookeeper1:
  elasticsearch-data: